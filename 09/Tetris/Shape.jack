// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/09/Shape/Shape.jack

/** Implements a graphical Shape. */
class Shape {

   field Array coords; // screen location of the Shape's top-left corner
   field int startRow,orientation, startCol, squareSize, rowPixelOffset, colPixelOffset, type;

   /** Constructs a new Shape with a given location and size. */
   constructor Shape new(Stint _startRow, int _startCol, int _rowPixelOffset, int _colPixelOffset,  int _squareSize) {
      let type = Random.randRange(6);
      let startRow = _startRow;
      let startCol = _startCol;
      let rowPixelOffset = _rowPixelOffset;
      let colPixelOffset = _colPixelOffset;
      let squareSize = _squareSize;
      let coords = getRotatedCoords(0);
      return this;
   }

  method boolean isStraight() {
    return type = 0;
  }

  method boolean isL() {
    return type= 1;
  }

   method boolean isL2() {
    return type= 2;
  }

   method boolean isSquare() {
    return type= 3;
  }

   method boolean isZ() {
    return type= 4;
  }

   method boolean isT() {
    return type= 5;
  }

   method boolean isZ2() {
    return type = 6;
  }

   /** Disposes this Shape. */
   method void dispose() {
      do disposeCoords();
      do Memory.deAlloc(this);
      return;
   }

   method void disposeCoords() {
     var boolean loop;
      var int i;
      var Array point;
     	while (loop) {
        let point = coords[i];
        do point.dispose();
    	}

      return;
   }

   /** Draws the Shape on the screen. */
   method void draw(boolean erase) {
      var boolean loop;
      var int i, startColPixel, startRowPixel;
      var Array point;
      do Screen.setColor(~erase);
      let loop = true;
      let i = 0;
    	while (loop) {
        let point = coords[i];
        do Screen.drawRectangle( (startCol + point[1]) * squareSize + colPixelOffset,(startRow +  point[0]) * squareSize +  rowPixelOffset, (startCol + point[1]) * squareSize + squareSize + colPixelOffset, (startRow + point[0]) * squareSize + squareSize + rowPixelOffset);
        let i = i + 1;
        if (~(i < 4)) {
          let loop = false;
        }
    	}
      return;
   }
  
   method Array peakMove(int rowOffset, int colOffset, Array coords) {
    var Array updatedCoords;
    var boolean loop;
    var int i, startColPixel, startRowPixel, rowVal, colVal;
    var Array point, newPoint;
    let loop = true;
    let updatedCoords = Array.new(4);

      let i = 0;
    	while (loop) {
        let point = coords[i];
        let newPoint = Array.new(2);
        let rowVal = point[0] + startRow;
        let colVal = point[1] + startCol;
        let newPoint[0] = rowVal + rowOffset;
        let newPoint[1] = colVal + colOffset;
        let updatedCoords[i] = newPoint;
        let i = i + 1;
        if (~(i < 4)) {
          let loop = false;
        }
    	}
      return updatedCoords;
   }

  method Array peekPosition() {
    return peakMove(0, 0, coords);
  }
  method Array peekMoveLeft() {
    return peakMove(0, -1, coords);
   }

  method void moveLeft() {
     do draw(true);
      let startCol = startCol - 1;
      do draw(false);
      return;
   }

  method Array peekMoveRight() {
    return peakMove(0, 1, coords);
   }

  

    method void moveRight() {
     do draw(true);
      let startCol = startCol + 1;
    
      do draw(false);
      return;
   }

   method Array peekMoveDown() {
    return peakMove(1, 0, coords);
   }

  method void moveDown() {
    do draw(true);
    let startRow = startRow + 1;
    do draw(false);
    return;
   }


  //  /** Moves the Shape left by 2 pixels. */
  //  method void moveLeft() {
  //     if (x > 1) {
  //        do Screen.setColor(false);
  //        do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
  //        let x = x - 2;
  //        do Screen.setColor(true);
  //        do Screen.drawRectangle(x, y, x + 1, y + size);
  //     }
  //     return;
  //  }

  //  /** Moves the Shape right by 2 pixels. */
  //  method void moveRight() {
  //     if ((x + size) < 510) {
  //        do Screen.setColor(false);
  //        do Screen.drawRectangle(x, y, x + 1, y + size);
  //        let x = x + 2;
  //        do Screen.setColor(true);
  //        do Screen.drawRectangle((x + size) - 1, y, x + size, y + size);
  //     }
  //     return;
  //  }

 
  method Array peekRotation() {
    var int newOrientation, newCoords;
    var Array point;
    do draw(true);
    do disposeCoords();
    if (orientation = 3) {
      let newOrientation = 0;
    } else {
      let newOrientation = orientation + 1;
    }

    let newCoords = getRotatedCoords(newOrientation);
    return peakMove(0, 0, newCoords);
  }

  method void rotate() {
    var Array point;
    do draw(true);
    do disposeCoords();
    if (orientation = 3) {
      let orientation = 0;
    } else {
      let orientation = orientation + 1;
    }

    let coords = getRotatedCoords(orientation);
    do draw(false);
  return;
  }

   method Array getRotatedCoords(int newOrientation) {
    var Array point, newCoords;
    let newCoords = Array.new(4);
     if (isStraight()) {
      if (newOrientation = 0) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  1 ;
        let point[1] = 2 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] =  3;
        let newCoords[3] = point;
      } 
      if (newOrientation = 1) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 2 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 2 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  2 ;
        let point[1] = 2 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 3 ;
        let point[1] =  2;
        let newCoords[3] = point;
      } 
      if (newOrientation = 2) {
        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  2 ;
        let point[1] = 2 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] =  3;
        let newCoords[3] = point;
      } 
        if (newOrientation = 3) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  2 ;
        let point[1] = 1 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 3 ;
        let point[1] =  1;
        let newCoords[3] = point;
      } 
     }

     if (isL()) {
        if (newOrientation = 0) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  1 ;
        let point[1] = 1;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] =  2;
        let newCoords[3] = point;
      } 
      if (newOrientation = 1) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 2 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 1;
        let newCoords[3] = point;
      } 
      if (newOrientation = 2) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  1 ;
        let point[1] = 2 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 2;
        let newCoords[3] = point;
      } 
        if (newOrientation = 3) {
        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  1 ;
        let point[1] = 1 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] =  1;
        let newCoords[3] = point;
      } 
     }
      if (isL2()) {
        if (newOrientation = 0) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  1 ;
        let point[1] = 2;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] =  2;
        let newCoords[3] = point;
      } 
      if (newOrientation = 1) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 1;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 2;
        let newCoords[3] = point;
      } 
      if (newOrientation = 2) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 0 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 2;
        let newCoords[3] = point;
      } 
        if (newOrientation = 3) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  1 ;
        let point[1] = 1 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] =  1;
        let newCoords[3] = point;
      } 
     }

     // Sqaure
         if (isSquare()) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 2 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  1 ;
        let point[1] = 1;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] =  2;
        let newCoords[3] = point;
     
     }

         if (isZ()) {
        if (newOrientation = 0) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  0 ;
        let point[1] = 1;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] =  2;
        let newCoords[3] = point;
      } 
      if (newOrientation = 1) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 2;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 2;
        let newCoords[3] = point;
      } 
      if (newOrientation = 2) {
        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 2;
        let newCoords[3] = point;
      } 
        if (newOrientation = 3) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  1 ;
        let point[1] = 1 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] =  1;
        let newCoords[3] = point;
      } 
     }
     ////// T ///////////////

      if (isT()) {
        if (newOrientation = 0) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  0 ;
        let point[1] = 1;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] =  2;
        let newCoords[3] = point;
      } 
      if (newOrientation = 1) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 1;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 2;
        let newCoords[3] = point;
      } 
      if (newOrientation = 2) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 2 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 1;
        let newCoords[3] = point;
      } 
        if (newOrientation = 3) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  1 ;
        let point[1] = 1 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] =  1;
        let newCoords[3] = point;
      } 
     }
       ////// Z2 ///////////////

      if (isZ2()) {
        if (newOrientation = 0) {
        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] =  1 ;
        let point[1] = 1;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] =  2;
        let newCoords[3] = point;
      } 
      if (newOrientation = 1) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 2;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 2;
        let newCoords[3] = point;
      } 
      if (newOrientation = 2) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 1 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 1 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 2;
        let newCoords[3] = point;
      } 
        if (newOrientation = 3) {
        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] = 0 ;
        let newCoords[0] = point;

        let point = Array.new(2);
        let point[0] = 2 ;
        let point[1] = 0 ;
        let newCoords[1] = point;

        let point = Array.new(2);
        let point[0] = 0 ;
        let point[1] = 1 ;
        let newCoords[2] = point;

        let point = Array.new(2);
        let point[0] = 1 ;
        let point[1] =  1;
        let newCoords[3] = point;
      } 
     }
      return newCoords;
  }

}
